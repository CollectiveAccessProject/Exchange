<div id="addMediaForm" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="addMediaModal" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <i class="fa fa-times" aria-hidden="true"></i>
        </button>
        <h2 class="modal-title" id="addMediaFormLabel">Add new media</h2>
      </div>

      <% media_file = MediaFile.new %>
      <% instances = media_file.ext_media_classes_instances %>

      <%= simple_form_for(@media_file, :remote => true, html: { id: 'addMediaFormElements', :multipart => true, data: { :url => '/media_files', :format => :js}}) do |f| %>
          <div class="panel panel-primary">
            <div class="panel-body">
              <%= f.error_notification %>

              <div id="form-status">
                  <div class="flash-notice" id="form-status-message"></div>
              </div>
              <div class="row">
              	<div class="col-sm-4">
			  		<div id="create-form-radios" class="captionRadios">
						<label class="control-label">Caption Type</label><br/>
						<%= f.collection_radio_buttons :caption_type, [[1, "Custom"], [2, "None"], [3, "Short"], [4, "Long"]], :first, :last %>
			  		</div>
			  	</div>
			  	<div class="col-sm-4">
			  			<div id="<%= media_file.id %>_display_collectionobject_link" class="captionRadios">
							<label class="control-label">Display link to Collection Object?</label><br/>
							<%= f.collection_radio_buttons :display_collectionobject_link, [[1, "Yes"], [0, "No"]], :first, :last, checked: 1 %>
						</div>
			  	</div>
			  </div>
			  <div id="create-form-caption">
              			<%= f.input :caption, :as => :summernote %>
              		  </div>
			  <input id="create-form-short-caption-text" type="hidden" name="media_file[caption]" value="">
			  <input id="create-form-long-caption-text" type="hidden" name="media_file[caption]" value="">
			  <input id="create-form-no-caption-text" type="hidden" name="media_file[caption]" value=" ">
			  <div id='create-form-caption-display' class="captionDisplay"></div>
              <%= f.input :copyright_license, collection: Resource.license_types, :include_blank => false %>
              <%= f.input :copyright_notes, :as => :summernote %>
              <%= f.input :access,  collection: Rails.application.config.x.access_types, selected: 1, label: 'Publication Status'%>

			  <ul id="create-form-tabs" class="nav nav-tabs">
				<% instances.each_with_index do |p,i| %>
					<% if (p.class.name == 'CollectiveaccessLink')    # hide CollectiveAccess plugin (only used for data import, not for direct user interaction)
						 break
					  end
					%>
					<li<% if i==0 %> class="active"<% end %>>
					  <a data-toggle="tab" href="#<%= p.class.name %>"><%= p.class.header %></a>
					</li>
				<% end %>
			  </ul>

			  <div class="tab-content">
				<% instances.each_with_index do |p,i| %>
					<% if (p.class.name == 'CollectiveaccessLink')
						 break
					   end
					%>
					<div id="<%= p.class.name %>" class="tab-pane fade <% if i==0 %>in active<% end %>">
					  <p><%= p.render_form %></p>
					</div>
				<% end %>
			  </div>
				<%= hidden_field(:media_file, :resource_id, :value => @resource.id) %>
              <%= tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token) %>
			  <%= f.button :submit %>
            </div>
          </div>
      <% end %>

    </div>
  </div>
</div>
<script>
	var short_caption = '<h4>Short Caption</h4><p>Will be formatted as:</p><p>Artist<br/>Title</p>'
	var long_caption = '<h4>Long Caption</h4><p>Will be formatted as:</p><p>Artist<br/>Title<br/>Date Created<br/>Medium | Support<br/>Credit Line<br/>Catalog Number</p>'
	$(document).ready(function(){
		$('#create-form-caption-display').hide();
		$('#create-form-radios #media_file_caption_type_4').prop('checked', true);
		$('#create-form-caption-display').show().html(long_caption);
		$('#create-form-caption .summernote, #create-form-short-caption-text, #create-form-no-caption-text').prop('disabled', true);
		$('#create-form-caption').hide();
		$('#create-form-long-caption-text').prop('disabled', false);
		$('#create-form-tabs li').click(function(){
			var last_clicked = $('#create-form-tabs li').index(this);
			if(last_clicked != 0){
				$('.captionRadios, #create-form-caption-display').hide();
				$('#create-form-caption').show();
				$('#create-form-caption .summernote, #create-form-short-caption-text, #create-form-long-caption-text').prop('disabled', true);
				$('#create-form-caption .summernote').prop('disabled', false);
				$('#media_file_copyright_license').prop('disabled', false);
			} else {
				$('.captionRadios').show();
			}
		});
		$('#create-form-radios, a[href="#CollectionobjectLink"]').click(function(){
			create_caption_val = $("#create-form-radios input:radio[name = 'media_file[caption_type]']:checked").val();
			if(create_caption_val == 1){
				$('#create-form-caption-display').hide();
				$('#create-form-caption').show();
				$('#create-form-caption .summernote').prop('disabled', false);
				$('#create-form-short-caption-text, #create-form-long-caption-text, #create-form-no-caption-text').prop('disabled', true);
			} else if(create_caption_val == 2){
				$('#create-form-caption-display').show().html('<h4>No Caption</h4>');
				$('#create-form-caption .summernote, #create-form-short-caption-text, #create-form-long-caption-text').prop('disabled', true);
				$('#create-form-caption').hide();
				$('#create-form-no-caption-text').prop('disabled', false);
			} else if(create_caption_val == 3) {
				$('#create-form-caption-display').show().html(short_caption);
				$('#create-form-caption .summernote, #create-form-long-caption-text, #create-form-no-caption-text').prop('disabled', true);
				$('#create-form-caption').hide();
				$('#create-form-short-caption-text').prop('disabled', false);
			} else if(create_caption_val == 4) {
				$('#create-form-caption-display').show().html(long_caption);
				$('#create-form-caption .summernote, #create-form-short-caption-text, #create-form-no-caption-text').prop('disabled', true);
				$('#create-form-caption').hide();
				$('#create-form-long-caption-text').prop('disabled', false);
			}
		});
		$('#CollectionobjectLink').bind('railsAutocomplete.select', function(){			
			var index_data = $('#collectionobject_link_indexing_data').val();
			var index_parse = jQuery.parseJSON(index_data)
			short_caption = ''
			long_caption = ''
			if(index_parse.artist){
				short_caption += index_parse.artist + '<br/>';
				long_caption += index_parse.artist + '<br/>';
			}
			if(index_parse.title){
				short_caption += '<em>' + index_parse.title + '</em>';
				long_caption += '<em>' + index_parse.title + '</em><br/>';
			}
			if(index_parse.date_created){
				long_caption += index_parse.date_created + '<br/>';
			}
			var material_fields = ''
			if(index_parse.support){
				material_fields = index_parse.medium + ' | ' + index_parse.support
			} else {
				material_fields = index_parse.medium
			}
			if(material_fields != ''){
				long_caption += material_fields + '<br/>';
			}
			if(index_parse.credit_line){
				long_caption += index_parse.credit_line + '<br/>';
			}
			if(index_parse.idno){
				long_caption += index_parse.idno;
			}
			$('#create-form-short-caption-text').prop("value", short_caption);
			$('#create-form-long-caption-text').prop("value", long_caption);
			$('#media_file_copyright_license').prop('disabled', true);
			create_caption_val = $("#create-form-radios input:radio[name = 'media_file[caption_type]']:checked").val();
			if(create_caption_val == 3){
				$('#create-form-caption-display').html(short_caption);
			} else if(create_caption_val == 4){
				$('#create-form-caption-display').html(long_caption);
			}
			
		});
	});
</script>