<%
	col = 0
	thumb = false
%>
<%
	if @show_header
%>
<div class="row">
  <div class="col-md-12 text-center">
    <% if(@result.total_entries == 0) %>
        <h2 class="welcomeHeading">No results found for <em><%= sanitize(@query) %></em></h2>
   	 <% elsif (@query_proc == '*') %>
   	 	<h2 class="welcomeHeading">Showing <%= @result.total_entries.to_s %> objects and resources in the Exchange</h2>
   	 <% else %>
   	 	<h2 class="welcomeHeading">Showing <%= @result.total_entries.to_s %> objects and resources for <em><%= @query_proc %></em></h2>
    <% end %>
  </div>
</div>
<%
	end
%>

<div id="collectionObjectResults-status">
	<div class="flash-notice" id="collectionObjectResults-status-message">

	</div>
</div>
<% if (current_user && @available_collections_and_resources && (@available_collections_and_resources.length > 0)) %>
	<div class='pull-right' style='margin-right: 15px'>
		<button id='colObjectResultsSelectAllTrigger' class='btn btn-default' data-toggle='0'>Select all</button>
	</div>
	
	<div id="welcome-add">
		<form class="collectionObjectResultsAdd">
			Add selected to <%=

			if(@available_collections_and_resources.length > 25)
				autocomplete_field_tag(:find_resource_id, '', '/welcome/autocomplete_collection_resource_title', :"data-autocomplete-label" => "Sorry, nothing found.", :size => 40, :id_element => "#collection_add_to_collection_id", :placeholder => "Search for a collection or resource") + hidden_field_tag(:collection_add_to_collection_id)
			else
				select_tag(:collection_add_to_collection_id, options_from_collection_for_select(@available_collections_and_resources, :id, lambda {|t| strip_tags(t.title)}), class:'', id:'collection_add_to_collection_id')
			end %>
			<%= button_tag "<span class='glyphicon glyphicon-plus-sign' aria-hidden='true'></span> Add".html_safe, href: "#", class: "btn btn-noBg btn-xs", id: "collectionObjectResultsAddToCollection"  %>
		</form>
		<form class="collectionObjectResultsCreate">
			Add selected to new  
			<%= select_tag(:collection_new_collection_type, options_for_select(['resource', 'collection']), class:'', id:'collection_new_collection_type') %>
			
			 with title <%=

			text_field_tag(:collection_new_collection_title, '', :size => 30, :class => 'form-control', :placeholder => "My new collection or resource")
			 %>
			<%= button_tag "<span class='glyphicon glyphicon-plus-sign' aria-hidden='true'></span> Create".html_safe, href: "#", class: "btn btn-noBg btn-xs", id: "collectionObjectResultsCreateNewCollection"  %>
		</form>
	</div>
<% end %>
</div>

<% if @show_header %>
<form class="searchPaging">
	<div class="searchFormElement pull-right">
		<nobr>Sort by <%= select_tag("sort", options_for_select(sortOptions(), @sort_default), {id: "welcomeSort"}) %></nobr>
	</div>
</form>
<% end %>
<% if @refine and @refine["_all"] and (@refine["_all"].values.reduce(0) {|sum, v| sum = sum + v.length } > 0) %>
	<div id="results-filters">
		<strong>Filters: </strong>
		<% format_refine_filters(@refine, "_all").each do |r| %>
			<%= r[:field] %>: <em> <%= r[:value] %></em>
			<a href="#" data-remove_id="<%= r[:filter] %>" class="removeFilter"><i class="fa fa-times" aria-hidden="true"></i></a>
		<% end%>
	</div>
<% end%>


<div class="panel-welcome" id="welcome_results">
	<div>
		<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
			<div id="collection_object_results" class="row" data-type="collection_object">
				<% @result.each do |r| %>
					<%= render 'welcome_result_item', result: r %>
				<% end  %>
			</div>
			
			<div class="infinite-pagination"></div>
			<div class="infinite-pagination-message"></div>
			<% Exchange::WelcomeSearchLinkRenderer.set_data(type: 'collection_object', query: @query_proc) %>
			<%= will_paginate @result, renderer: Exchange::WelcomeSearchLinkRenderer %>
		</div>
	</div>
</div>

<script>
	jQuery(document).ready(function() {
		jQuery(function() {
			if ($('.infinite-pagination').size() > 0) {
				$(window).on('scroll', function() {
					var more_posts_url = $('.infinite-pagination a.next_page').attr('href');
					var bottom_distance = 20;

					if (more_posts_url && $(window).scrollTop() > $(document).height() - $(window).height() - bottom_distance) {
							$('.infinite-pagination-message').html('<i class="fa fa-cog fa-spin fa-2x fa-fw"></i> Loading...');
							$.get(more_posts_url, function(data) {
							$('.infinite-pagination-message').html('');
							$('#welcome_results').append(data);
						});
						$('.infinite-pagination a.next_page').remove();
					}
				});
			}
		});
		
		jQuery('#colObjectResultsSelectAllTrigger').off().on('click', function(e) {
			var toggle = jQuery(this).data('toggle');
			toggle = !toggle;
			jQuery('.qsResultCheckbox').prop('checked', toggle ? 1 : 0);
			if (toggle) {
				jQuery(this).html('Deselect all');
			} else {
				jQuery(this).html('Select all');
			}
			jQuery(this).data('toggle', toggle)
		});
		
		jQuery('#welcome-add').off().on('click', "#collectionObjectResultsAddToCollection", function(e) {
			e.preventDefault();

			var add_to_collection_id = jQuery("#collection_add_to_collection_id").val();

			var ids = jQuery("input.qsResultCheckbox").map(function() {
				return jQuery(this).prop('checked') ? jQuery(this).val(): undefined;
			}).get()

			if (!ids || (ids.length == 0)) {
				jQuery("#collectionObjectResults-status").slideDown(250);
				jQuery("#collectionObjectResults-status-message").html("No items are checked");
				window.setTimeout(function() {
					jQuery("#collectionObjectResults-status").slideUp(250);
				}, 3000);
				return false;
			}

			jQuery.post("/resources/" + add_to_collection_id + "/add_child_resources", {"add_child_resource_ids[]": ids}, function(data) {
				if (data.status == 'err') {
					jQuery("#collectionObjectResults-status").slideDown(250);
					jQuery("#collectionObjectResults-status-message").html(data.error);
					window.setTimeout(function() {
						jQuery("#collectionObjectResults-status").slideUp(250);
					}, 3000);
				} else {
					var n = data.numAdded;
					existed_msg = (data.numExisting > 0) ? ((data.numExisting == 1) ? " (1 already exists)" :  " (" + data.numExisting + " already exist)") : "";

					jQuery("#collectionObjectResults-status").slideDown(250);
					jQuery("#collectionObjectResults-status-message").html(((n == 1) ? "Added 1 collection object to collection" : "Added " + n + " collection objects to collection") + existed_msg);
					window.setTimeout(function() {
						jQuery("#collectionObjectResults-status").slideUp(250);
					}, 3000);

					jQuery("input.qsResultCheckbox").prop('checked', false);
				}
				return true;
			}, 'json');
			return false;
		}).on('click', "#collectionObjectResultsCreateNewCollection", function(e) {
			e.preventDefault();

			var collection_type = jQuery("#collection_new_collection_type").val();
			var collection_title = jQuery("#collection_new_collection_title").val();

			var ids = jQuery("input.qsResultCheckbox").map(function() {
				return jQuery(this).prop('checked') ? jQuery(this).val(): undefined;
			}).get()

			if (!ids || (ids.length == 0)) {
				jQuery("#collectionObjectResults-status").slideDown(250);
				jQuery("#collectionObjectResults-status-message").html("No items are checked");
				window.setTimeout(function() {
					jQuery("#collectionObjectResults-status").slideUp(250);
				}, 3000);
				return false;
			}

			jQuery.post("/resources/create_new_resource_with_children", {"type": collection_type, "title": collection_title, "add_child_resource_ids[]": ids}, function(data) {
				if (data.status == 'err') {
					jQuery("#collectionObjectResults-status").slideDown(250);
					jQuery("#collectionObjectResults-status-message").html(data.error);
					window.setTimeout(function() {
						jQuery("#collectionObjectResults-status").slideUp(250);
					}, 3000);
				} else {
					var n = data.numAdded;
					existed_msg = (data.numExisting > 0) ? ((data.numExisting == 1) ? " (1 already exists)" :  " (" + data.numExisting + " already exist)") : "";

					jQuery("#collectionObjectResults-status").slideDown(250);
					jQuery("#collectionObjectResults-status-message").html(((n == 1) ? "Created new " + collection_type + " with  1 collection object" : "Created new " + collection_type + " with " + n + " collection objects") + existed_msg);
					window.setTimeout(function() {
						jQuery("#collectionObjectResults-status").slideUp(250);
					}, 3000);

					jQuery("input.qsResultCheckbox").prop('checked', false);
					jQuery("#collection_new_collection_title").val('');
				}
				return true;
			}, 'json');
			return false;
		});
	});
</script>