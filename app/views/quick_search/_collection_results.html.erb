<div class="panel panel-primary" id="results_collection">
<% if @show %>
  <div class="panel-body">
    <div>
      <div class="row">
        <div class="col-sm-12">
          <h4>
                <%= @collections_count %> Learning Collection<%= (@collections_count == 1) ? "" : "s" %>
                (page <%= @collections_page.to_s + "/" + @collections_num_pages.to_s %>)
            <div id="collection_right" class="pull-right">
              <form class="searchPaging">
                <div class="searchFormElement">Results Per Page <%= select_tag("collection_num_items_per_page", options_for_select(itemsPerPageOptionList, @items_per_page_defaults['collection']), {id: "collection_num_items_per_page"}) %></div>
                <div class="searchFormElement">Sort by <%= select_tag("collection_sort", options_for_select(sortOptions('collection'), @sort_defaults['collection']), {id: "collection_sort"}) %></div>
              </form>
            </div>
          </h4>
        </div>
      </div>
      <div class="row" id="collectionsResultsContainer">
      <div class="col-md-3">
         <% if @refine and @refine["collection"] and (@refine["collection"].length > 0) %>
            <div class="row">
                <div class="col-md-12">
                    <h3>Filters</h3>
                    <ul class="quickSearchRefineFilterList">
                    <% format_refine_filters(@refine, "collection").each do |r| %>
                        <li><%= r[:field] %>: <em> <%= r[:value] %></em>
                        <a href="#" data-remove_id="<%= r[:filter] %>" class="removeFilter"><i class="fa fa-times" aria-hidden="true"></i></a></li>
                    <% end%>
                    </ul>
                </div>
            </div>
        <% end %>
        <h3>Refine by</h3>
        <div class="row">
            <div class="col-md-12">
                Author name<br/>
                <%= autocomplete_field_tag(:collection_find_author, '', quick_search_autocomplete_refine_url(query: @query, field: "author.raw", type: "collection"), :"data-autocomplete-label" => "Sorry, nothing found.", :"data-update-elements" => nil, :size => 20, :id_element => "#collection_author", :placeholder => "Search", autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: "false", :class => 'quickSearchRefineAutocomplete', "data-filter": "author") + hidden_field_tag(:collection_author) %>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                Title<br/>
                <%= autocomplete_field_tag(:collection_find_title, '', quick_search_autocomplete_refine_url(query: @query, field: "title.raw", type: "collection"), :"data-autocomplete-label" => "Sorry, nothing found.", :size => 20, :id_element => "#collection_rtitle", :placeholder => "Search", autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: "false", :class => 'quickSearchRefineAutocomplete', "data-filter": "title") + hidden_field_tag(:collection_rtitle) %>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                Keywords/tags<br/>
                <%= autocomplete_field_tag(:collection_find_keywords, '', quick_search_autocomplete_refine_url(query: @query, field: "all_keywords.raw", type: "collection"), :"data-autocomplete-label" => "Sorry, nothing found.", :size => 20, :id_element => "#collection_keywords", :placeholder => "Search", autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: "false", :class => 'quickSearchRefineAutocomplete', "data-filter": "all_keywords") + hidden_field_tag(:collection_keywords) %>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                Created for<br/>
                <% Rails.application.config.x.user_roles.each do |label, v| %>
                    <% is_selected = (session[:refine] and session[:refine]["collection"] and session[:refine]["collection"].has_key?("affiliation") and session[:refine]["collection"]["affiliation"].include?("affiliation:\"" + v.to_s + "\"")) %>
                    <% if !is_selected %>
                        <%= (check_box_tag(:collection_created_for, value = v, checked = is_selected, options = {class: "quickSearchRefineCheckbox", "data-filter": "affiliation"}) + " " + label).html_safe %><br/>
                    <% end %>
                <% end %>
            </div>
        </div>
<% if current_user %>
        <div class="row">
            <div class="col-md-12">
                Access type<br/>
                <% Rails.application.config.x.access_types.each do |label, v| %>
                    <% is_selected = (session[:refine] and session[:refine]["collection"] and session[:refine]["collection"].has_key?("access") and session[:refine]["collection"]["access"].include?("access:\"" + v.to_s + "\"")) %>
                    <% if !is_selected %>
                        <%= (check_box_tag(:collection_access, value = v, checked = is_selected, options = {class: "quickSearchRefineCheckbox", "data-filter": "access"}) + " " + label).html_safe %><br/>
                    <% end %>
                <% end %>
            </div>
        </div>
<% end %>
        
        </div>
        <div class="col-sm-9">
          <%
            col = 0
            thumb = false
          %>
          <% @collections.each do |r|
            next if(!r.can(:view, current_user) and !r.can(:edit, current_user))
            col = col+1
            if(col == 1)
          %>
                  <div class="row">
              <%
                end
              %>

              <div class="col-sm-2 qsResult">
                <div class="text-left">
                  <% if r[:access] < 1 %><i class="fa fa-eye-slash" aria-hidden="true"></i><% end %>
                  <%= link_to  "<i class='fa fa-folder-o'></i> ".html_safe + sanitize(r[:title], tags: %w(strong em a font b sup sub u), attributes: %w(href style)), get_resource_view_path(r[:id], user_signed_in?) %></div>
                <% if(r.resource_hierarchies.count) %>
                    <% r.resource_hierarchies.each do |rel| %>
                        <% if(rel.child_resource.is_resource) %>
                            <% rel.child_resource.media_files.each do |f| %>
                                <% if f.sourceable %>
                                    <% if f.access == 1 %>
                                        <%= link_to (f.sourceable.preview :thumbnail), get_resource_view_path(rel.resource_id, user_signed_in?) %><br/>
                                        <% thumb = true %>
                                        <% break %>
                                    <% end %>
                                <% end %>
                            <% end %>
                            <% if(thumb == true) %>
                                <% break %>
                            <% end %>
                        <% end %>
                    <% end %>
                <% end %>
                <% if(thumb == false) %>
                    <%= link_to '<i class="fa fa-picture-o fa-5x fa-align-center thumbPlaceholder" aria-hidden="true"></i>'.html_safe, get_resource_view_path(r, user_signed_in?) %><br/>
                <% end %>
                <div class="qsResultText">
                  <%=	"<div class='small'><i>Contains #{r.resource_hierarchies.count}".html_safe + ((r.resource_hierarchies.count == 1) ? " item" : " items") + "</i></div>".html_safe %>
                  <%
                    if r.author_id
                      user_author = r.get_author_name.gsub(/\([\S]+\)/, '')
                    else
                      user_author = r.user.name
                    end
                  %>
                  <%
                    if (Time.now.to_i - r.updated_at.to_i) > 86400
                      display_time = r.updated_at.in_time_zone('Eastern Time (US & Canada)').strftime("%B %-d, %Y %l:%M %P").gsub(/(a|p)(m)/, '\1.\2.')
                    else
                      display_time = time_ago_in_words(r.updated_at) + ' ago'
                    end
                  %>
                  <div class="qsMoreCaption">
                    <%= sanitize("<div class='small'><b>Author</b> #{user_author}</div><div class='small'><b>Last Updated</b> #{display_time}</div>") %>
                    <% if r.total_ratings > 0 %>
                      <div class='small'><span class="rateTitle"><strong>Rating: </strong></span><%= rating_for r, 'quality', star_on: "mortarboard_on_sm.png", star_off: "mortarboard_off_sm.png", star_half: "mortarboard_half_sm.png" %></div>
                    <% end %>
                  </div>
                </div>
                <% thumb = false %>
              </div>
              <%
                if(col == 6)
                    col = 0
              %>
                  </div>
              <%
                end
              %>
          <% end %>
    <% if (col > 0) %>
          </div><!-- end row -->
              <% end %>
          <div class='row'>
            <%=
              if(@collections_needs_previous_paging)

                ("<div class='col-sm-3 text-center'>" + link_to("Previous", query_results_path(type: "collection", page: @collections_page - 1, query: @query), { class: "btn btn-default search-next-btn", remote: true}) + "</div>").html_safe
              else
                "<div class='col-sm-3'></div>".html_safe
              end
            %>
            <div class='col-sm-6 text-center'>
              <%
                if (@collections_needs_previous_paging || @collections_needs_next_paging)
                s = 1
                e = @collections_num_pages

                if (e > 10)
                  s = @collections_page - 5
                  s = 1 if (s < 1)
                  e = s + 9
                  e = @collections_num_pages if e > @collections_num_pages
                end

                for i in s..e do
              %>
                  <%=  (link_to(i, query_results_path(type: "collection", page: i, query: @query), { class: "btn search-next-btn " + ((i == @collections_page) ? "btn-exch-green" : "btn-default"), remote: true})).html_safe %>
              <%
                end
                end
              %>
            </div>
            <%=
              if(@collections_needs_next_paging)

                ("<div class='col-sm-3 text-center'>" + link_to("Next", query_results_path(type: "collection", page: @collections_page + 1, query: @query), { class: "btn btn-default search-next-btn", remote: true}) + "</div>").html_safe
              else
                "<div class='col-sm-3'></div>".html_safe
              end
            %>
          </div>
        </div>
      </div>
    </div>

    <script>
        //jQuery(document).ready(function() {
            jQuery("#query_search_content").on('change', "#collection_num_items_per_page, #collection_sort", function(e) {
                jQuery.getJSON("<%= query_results_path(type: "collection", page: @collections_page, query: @query) %>?length=" + jQuery("#collection_num_items_per_page").val() + "&sort=" + jQuery("#collection_sort").val(), function(data) {
                    jQuery("#results_collection").html(data.html);
                    return true;
                });
            });
           //  resizeBar("#collection_title_link", "#collection_right");	
//             $(window).on('resize', function(){
//                 resizeBar("#collection_title_link", "#collection_right");		
//             });
            // Refine UI: autocomplete add filter
            jQuery(document).on('railsAutocomplete.select', "#results_collection", function(event, data){
                var filter = jQuery(event.target).data('filter');
                event.preventDefault();
            
                if (!filter) { return false; }
                jQuery.getJSON("<%= query_results_path(type: "collection", page: @collections_page, query: @query) %>?refine[]=" + filter + ":\"" + data.item.id + "\"", function(data) {
                    jQuery("#results_collection").html(data.html);
                    return true;
                });
            });
            
            // Refine UI: checkbox add filter
            jQuery(document).on('change', "#results_collection input.quickSearchRefineCheckbox", function(event){
                var filter = jQuery(event.target).data('filter');
                var val = jQuery(this).val();
                event.preventDefault();
            
                if (!filter || (val < 0)) { return false; }
            
                jQuery.getJSON("<%= query_results_path(type: "collection", page: @collections_page, query: @query) %>?refine[]=" + filter + ":\"" + val + "\"", function(data) {
                    jQuery("#results_collection").html(data.html);
                    return true;
                });
            });
        
            // Refine UI: remove filter
            jQuery(document).on('click', "#results_collection .removeFilter", function(event, data){
                event.preventDefault();
                var remove_id = jQuery(this).data('remove_id');
                jQuery.getJSON("<%= query_results_path(type: "collection", page: @collections_page, query: @query) %>?unrefine[]=" + remove_id, function(data) {
                    jQuery("#results_collection").html(data.html);
                    return true;
                });
            });
        //});
    </script>
  </div>
<% end %>
</div>
